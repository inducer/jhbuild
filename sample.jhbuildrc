# -*- mode: python -*-

use_mpi = True # XXX CUSTOMIZE ME!

# edit this file to match your settings and copy it to ~/.jhbuildrc

# what module set should be used.  The default at the moment is 'gnome-2.16',
# but it can be any of the files in the modulesets directory, or even
# the URL of a module set file on a web server.
moduleset = 'hedge'

# A list of the modules to build.  
modules = [ ]

from subprocess import Popen, PIPE
arch = Popen(["uname", "-i"], stdout=PIPE).communicate()[0].strip()

# what directory should the source be checked out to?
checkoutroot = os.path.expanduser('~/mach/%s/src' % arch)

# the prefix to configure/install modules to (must have write access)
prefix = os.path.expanduser('~/mach/%s/pool' % arch)

# if you do not want to use system-installed libraries for your builds, comment
# out the lines below
addpath('PKG_CONFIG_PATH', os.path.join(os.sep, 'usr', 'lib', 'pkgconfig'))
addpath('PKG_CONFIG_PATH', os.path.join(os.sep, 'usr', 'share', 'pkgconfig'))
addpath('LD_LIBRARY_PATH', os.path.join(prefix, 'lib'))

use_lib64 = False

# extra arguments to pass to all autogen.sh scripts
# to speed up builds of gnome2, try '--disable-static --disable-gtk-doc'
autogenargs=''

os.environ['THEPREFIX'] = prefix
os.environ['GCCVER'] = "41" # XXX CUSTOMIZE ME!

if use_mpi:
    os.environ['CC'] = "mpicc"
    os.environ['CXX'] = "mpicxx"
    os.environ['F77'] = "mpif77"
    os.environ['WITH_MPI'] = "--with-mpi"
    os.environ['HAVE_MPI'] = "--have-mpi"
else:
    # CUSTOMIZE ME!
    #os.environ['CC'] = "mpicc"
    #os.environ['CXX'] = "mpicxx"
    os.environ['F77'] = "gfortran"
    os.environ['WITH_MPI'] = ""
    os.environ['HAVE_MPI'] = ""
